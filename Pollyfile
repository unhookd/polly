#!/usr/bin/env ruby

# image declares container artifacts
@bootstrap = image {
  stage "bootstrap", "ubuntu:focal-20200606"

  command("USER") {
    "root"
  }

  env "DEBIAN_FRONTEND" => "noninteractive",
      "LC_ALL" => "C.UTF-8",
      "LANG" => "en_US",
      "LANGUAGE" => "en_US",
      "ACCEPT_EULA" => "y"

  apt %w{locales locales-all}

  run %q{locale-gen --purge en_US}
  run %q{/bin/echo -e "LANG=$LANG\nLANGUAGE=$LANGUAGE\n" | tee /etc/default/locale}
  run %q{locale-gen $LANGUAGE}
  run %q{dpkg-reconfigure locales}

  apt %w{git curl apt-transport-https aptitude ca-certificates apt-utils software-properties-common docker.io build-essential libyaml-dev ruby2* libruby2* ruby-bundler rubygems-integration rake}

  run %q{useradd --uid 1000 --home-dir /home/app --create-home --shell /bin/bash app}

  #TODO: workdir module
  command("WORKDIR") {
    "/home/app/polly"
  }
  command("COPY") {
    "--chown=app . /home/app/polly"
  }

  run %q{chown -R app /home/app}
}

@deploy = image {
  stage "deploy", @bootstrap.stage
  #TODO: user module
  command("USER") {
    "app"
  }

  run %q{bundle config set --local path /home/app/vendor/bundle}
  run %q{bundle config set --local jobs 4}
  run %q{bundle config set --local retry 3}
  run %q{bundle config set --local deploment true}
  run %q{bundle config set --local without development}
  run %q{bundle install}
}

@test = image {
  stage "test", @deploy.stage

  #TODO: user module
  command("USER") {
    "app"
  }

  #TODO: workdir module
  command("WORKDIR") {
    "/home/app/polly"
  }

  run %q{bundle install --path=~/vendor/bundle --jobs=4 --retry=3 --deployment --with "development"}

  run %q{ssh-add -l}
}

@plain_workflow = Plan.new
@plain_workflow.add_circleci_job("bootstrap", [{"image"=>@bootstrap.from, "user"=> 0}], [{"run"=>{"name"=>"bootstrap", "command"=>"
#{@bootstrap.command_list.join("\n")}
groupadd --gid 134 docker-extra
groupadd --gid 999 docker-extra-extra
adduser app docker-extra
adduser app docker-extra-extra
adduser app docker
chown -R app /home/app
su app -s /bin/test -- -w $SSH_AUTH_SOCK || (chmod g+w $SSH_AUTH_SOCK && chgrp 1000 $SSH_AUTH_SOCK && chgrp 1000 $(dirname $SSH_AUTH_SOCK) && chmod g+x $(dirname $SSH_AUTH_SOCK) && su app -s /bin/test -- -w $SSH_AUTH_SOCK)
test -z $DOCKER_CERT_PATH || (chown -R 1000 $(dirname $DOCKER_CERT_PATH))
su app -s /bin/bash -c '#{@deploy.command_list.join(" && ")}'
su app -w SSH_AUTH_SOCK,DOCKER_CERT_PATH,DOCKER_HOST,DOCKER_MACHINE_NAME,DOCKER_TLS_VERIFY,NO_PROXY -s bin/polly -- build
"}}], {}, "/home/app/polly") #TODO: workingdir module
@plain_workflow.add_circleci_job("primary", [{"image"=>"polly:latest"}], [{"run"=>{"name"=>"rspec", "command"=>"bundle exec rspec\n"}}], {"BUNDLE_PATH" => "/home/app/vendor/bundle"}, "/home/app/polly")
@plain_workflow.depends("primary", "bootstrap")

#@plain_workflow = Plan.new
#@plain_workflow.add_circleci_job("bootstrap", [{"image"=>@bootstrap.from, "user"=> 0}], [{"run"=>{"name"=>"bootstrap", "command"=>"date && env && true"}}], {}, "/home/app/polly") #TODO: workingdir module
#@plain_workflow.add_circleci_job("primary", [{"image"=>@bootstrap.from}], [{"run"=>{"name"=>"rspec", "command"=>"date && env && true"}}], {"BUNDLE_PATH" => "/home/app/vendor/bundle"}, "/home/app/polly")
#@plain_workflow.depends("primary", "bootstrap")
