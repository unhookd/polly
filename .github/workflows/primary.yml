name: primary

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    #runs-on: ubuntu-22.04
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    container:
      #TODO: !!!!
      #TODO: --reboot bootstrap step to polly generate --bootstrap=github
      image: ubuntu:jammy-20220421
      options: "--user 0"

      #image: ghcr.io/unhookd/polly:3.0-rc1@sha256:4a638fbdb565141d175e5124a756a2533b132b4ac9f996ff54f08e1be6a069a6
      #options: "--user 1001"

    steps:
    - uses: actions/checkout@v2

    - name: bootstrap
      run: |
        if which polly;
        then
          whoami
          groups
          ls -l /var/run/docker.sock
          polly generate > Dockerfile
        else
          set -e

          groupadd --gid 121 alpha
          groupadd --gid 123 tau
          groupadd --gid 134 beta
          groupadd --gid 999 docker
          groupadd --gid 1000 theta
          groupadd --gid 1001 zeta

          useradd --uid 1000 --home-dir /home/app --create-home --shell /bin/bash app --groups alpha,beta,docker,theta,zeta,tau
          useradd --uid 1001 --home-dir /home/runner --create-home --shell /bin/false runner --groups alpha,beta,docker,theta,zeta,tau

          export DEBIAN_FRONTEND=noninteractive LC_ALL=C.UTF-8 LANG=en_US LANGUAGE=en_US ACCEPT_EULA=y
          apt-get update; apt-get install -y locales locales-all; apt-get clean; rm -rf /var/lib/apt/lists/*
          locale-gen --purge en_US
          /bin/echo -e "LANG=$LANG\nLANGUAGE=$LANGUAGE\n" | tee /etc/default/locale
          locale-gen $LANGUAGE
          dpkg-reconfigure locales
          apt-get update; apt-get install -y vim git curl apt-transport-https aptitude ca-certificates apt-utils software-properties-common docker.io build-essential libyaml-dev ruby3* libruby3* ruby-bundler rubygems-integration rake amazon-ecr-credential-helper; apt-get clean; rm -rf /var/lib/apt/lists/*
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add
          apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
          apt-get update; apt-get install -y kubectl; apt-get clean; rm -rf /var/lib/apt/lists/*

          usermod -a -G $(stat --printf=%G /var/run/docker.sock) app
          usermod -a -G $(stat --printf=%G /var/run/docker.sock) runner

          mkdir -p /polly/safe/git /polly/safe/run /polly/safe/tmp /polly/app /app /__w/polly/polly
          chown -R app.alpha /polly /__w/polly/polly
          chown -R app /home/app /app /__w/polly/polly

          su app -s /bin/bash -c 'cd /__w/polly/polly && gem build polly.gemspec -o polly-latest.gem'

          echo INSTALLING POLLY-LATEST GEM
          gem install polly-latest.gem

          su app -s /bin/bash -c 'cd /__w/polly/polly && polly generate > Dockerfile'
          whoami
          groups
          ls -l /var/run/docker.sock
          su runner -s /bin/bash -c 'echo runner-bits && whoami && groups'
        fi

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Inspect builder
      run: |
        echo "Name:      ${{ steps.buildx.outputs.name }}"
        echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
        echo "Status:    ${{ steps.buildx.outputs.status }}"
        echo "Flags:     ${{ steps.buildx.outputs.flags }}"
        echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
